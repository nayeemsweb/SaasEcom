
@{
    ViewData["Title"] = "Trash";
}


@section Styles
{
<!-- DataTables -->
<link rel="stylesheet" href="~/AdminLTE/plugins/datatables-bs4/css/dataTables.bootstrap4.css">
<link rel="stylesheet" href="~/AdminLTE/plugins/datatables/components.css">

<!--Alertify.js-->
<!-- include the style -->
<link rel="stylesheet" href="~/alertifyjs/css/alertify.min.css" />
<!-- include a theme -->
<link rel="stylesheet" href="~/alertifyjs/css/themes/default.min.css" />

}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-6">
                        <div class="float-left">
                            <h3 class="card-title">Deleted Products</h3>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="float-right">
                            <a class="btn btn-outline-info btn-sm" asp-area="Admin" asp-controller="Product" asp-action="All" >
                                <i class="fa-solid fa-shield-halved"></i> Active Products
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- /.card-body -->
            <div class="card-body" id="dataTableBody">
                        <div class="col-md-12 p-0">
                         <table id="DeletedProductsDataTable" class="table datatable-show-all">
						<thead>
							<tr>
								<th>Image</th>
								<th>Name</th>
								<th style="width:15%">Category</th>
								<th>Stock</th>
								<th>Price</th>
                                <th>Delete In</th>
								<th class="text-center">Actions</th>
							</tr>
						</thead>
						<!--FromDB-->
                        <tfoot>
							<tr>
								<th>Image</th>
								<th>Name</th>
								<th style="width:15%">Category</th>
								<th>Stock</th>
								<th>Price</th>
                                <th>Delete In</th>
								<th class="text-center">Actions</th>
							</tr>
						</tfoot>
					</table>
				
                        </div>
            </div>
            <!-- /.card-body -->

            <partial name="_ModalPartial" />
        </div>
        <!-- /.card -->
    </div>
</div>

@section Scripts
{
<!--Alertify.js-->
<!-- include the script -->
<script src="~/alertifyjs/alertify.min.js"></script>


<!-- DataTables -->
<script src="~/AdminLTE/plugins/datatables/jquery.dataTables.js"></script>
<script src="~/AdminLTE/plugins/select2/js/select2.min.js"></script>

<script>
    $(function () {
        $('#DeletedProductsDataTable').DataTable({
            "processing": true,
            "serverSide": true,
            "searching": false,
            "ajax": {
                "url": "/Admin/Product/GetTrashedProducts",
                "dataType": 'json'
                //,
                //"data": {id: "C1457E73-ABC4-42A4-AF2F-CE7CA1C65FF1"}
            },
            "columnDefs": [
                {
                    "orderable": false,
                    "targets": 0,
                     "render": function (data, type, row) {
                            var productName=row[1];
                            return `<img src="https://localhost:7190/admin/image?url=${data}&w=75&h=75" class="rounded"
                                    data-bs-toggle="tooltip" data-bs-placement="bottom" title="${productName}" style="cursor: pointer;"/>`;
                        }
                },
                {
                    "orderable": true,
                    "targets": 1,
                     "render": function (data, type, row) {
                            return `<h5 style="cursor: pointer;" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Restore to see details">${data}</h5>`;
                        }
                },
                {
                    "orderable": false,
                    "targets": 2,
                     "render": function (data, type, row) {
                            return GetProductCategoryList(data);
                        }
                },
                {
                    "orderable": false,
                    "targets": 3
                },
                {
                    "orderable": false,
                    "targets": 4
                },
                {
                    "orderable": false,
                    "targets": 5,
                    "render":function (data, type, row) {
                        return timer(data, type, row);
                    }
                },
                {
                    "orderable": false,
                    "targets": 6,
                    "render":function (data, type, row) {
                        return actionDropDown(data, type, row);
                    }
                }
            ]

        });
    });
</script>
<script>
    
    
function timer(data, type, row){
    var triggeredTime=data;
    var productId=row[6];
    var productName=row[1];
    makeTimer(triggeredTime, productId, productName);
    return `<div id="timer${productId}" class="row align-items-end" style="line-height: 1;
                                                            padding: 2px;
                                                            font-size: 30px;">
            <div id="hours${productId}" class="column text-center mr-1" style="font-size: 20px;
                                               color: #0B8D50;"></div>
            <div id="minutes${productId}" class="column text-center mr-1 ml-1" style="font-size: 20px;
                                                 color: #E4A405;"></div>
            <div id="seconds${productId}" class="column text-center ml-1" style="font-size: 17px;
                                                 color: #FF0000;"></div>
            </div>`;
}
function makeTimer(triggeredTime, productId, productName){
    setInterval(function() {
                var endTime	= new Date(new Date(triggeredTime).getTime() + 60 * 60 * 24 * 1000);
			
			    endTime = (Date.parse(endTime) / 1000);

			    var now = new Date();
			    now = (Date.parse(now) / 1000);

			    var timeLeft = endTime - now;

			    var days = Math.floor(timeLeft / 86400); 
			    var hours = Math.floor((timeLeft - (days * 86400)) / 3600);
			    var minutes = Math.floor((timeLeft - (days * 86400) - (hours * 3600 )) / 60);
			    var seconds = Math.floor((timeLeft - (days * 86400) - (hours * 3600) - (minutes * 60)));
  
			    if (hours < "10") { hours = "0" + hours; }
			    if (minutes < "10") { minutes = "0" + minutes; }
			    if (seconds < "10") { seconds = "0" + seconds; }
    
			    $("#hours"+productId).html(hours + `<span style="display: block;
                                                                 font-size: 10px;">Hours</span>`);
			    $("#minutes"+productId).html(minutes + `<span style="display: block;
                                                                 font-size: 10px;">Minutes</span>`);
			    $("#seconds"+productId).html(seconds + `<span style="display: block;
                                                                 font-size: 10px;">Seconds</span>`);
                                                                 
                if(hours==0&&minutes==0&&seconds==0){
                    forceDelete(productId, productName);
                }

	    }, 1000);
    }
</script>
<script>
function GetProductCategoryList(data){
        var items=``;
        if(data.length==0){
            return `<span class="badge badge-danger">No Category Assigned</span>`
        }
        var products = data.split(',');
        products.forEach((x)=>{
            items+=`<span class="badge badge-success m-2"> ${x} </span>`;
        });
        return items;
}
</script>
<script>
function actionDropDown(data, type, row){
    var productName=row[1];
    var productId=row[6];
    return         `<td class="text-center">
									<div class="list-icons text-center">
										<div class="dropdown">
											<a href="#" class="list-icons-item" data-toggle="dropdown">
												<i class="icon-menu9"></i>
											</a>

											<div class="dropdown-menu dropdown-menu-right">
												<a href="#" onclick="restoreProduct('${productId}', '${productName}')" class="dropdown-item text-info">
                                                    <i class="fa-solid fa-clock-rotate-left"></i>
                                                    <span class="ml-2">Restore Product</span>
                                                </a>
												<a href="#" onclick="deleteWarning('${productId}', '${productName}')" class="dropdown-item text-danger">
                                                    <i class="fa-solid fa-trash"></i>
                                                    <span class="ml-2">Force Delete</span>
                                                </a>
											</div>
										</div>
									</div>
								</td>`;
    }
</script>
<script>
    function restoreProduct(productId, productName){
        console.log(productName);
       $.ajax({
       url: '@Url.Action("RestoreProduct", "Product", "Admin")',
       type: 'POST',
       cache: false,
       data: { 'productId': productId},
       success: function (results) {
           $('#DeletedProductsDataTable').DataTable().ajax.reload();
           alertify.success("<strong>"+productName+"</strong> "+" retored.");
       },
       error: function () {
        alertify.defaults.glossary.title = 'Problem.!';
        alertify.error('Error occured to perform this action.')
       }
       });
    }
</script>
<script>
    function forceDelete(productId, productName){
        $.ajax({
       url: '@Url.Action("ForceDelete", "Product", "Admin")',
       type: 'POST',
       cache: false,
       data: { 'productId': productId},
       success: function (results) {
           $('#DeletedProductsDataTable').DataTable().ajax.reload();
           alertify.success("<strong>"+productName+"</strong> "+" permanently deleted.");
       },
       error: function () {
        alertify.defaults.glossary.title = 'Problem.!';
        alertify.error('Error occured to perform this action.')
       }
       });
    }
</script>
<script>
    function deleteWarning(productId, productName){
    alertify.confirm('Confirm Permanent Delete!', 'Do you want to permanently delete <strong>'+productName+'</strong> from trash?', 
                function(){ 
                    forceDelete(productId, productName);
                }, 
                function(){ 
                    //alertify.warning("<strong>"+productName+"</strong> "+" delete ceased.");
                });
    }
</script>

}



