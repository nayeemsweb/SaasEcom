// <auto-generated />
using System;
using Ecommerce.Store.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Web.Data.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    partial class StoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence<int>("OrderNumbers", "dbo")
                .StartsAt(1000L);

            modelBuilder.Entity("Ecommerce.Store.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a61cf49-d11a-494d-95ca-c649ed215773"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9169),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "This is category description",
                            ImageUrl = "Files/bongobondhu.jpg",
                            Name = "Food",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9169),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d6dcf59a-0cf7-4c22-aff5-38cd0223aca0"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9172),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "This is category description",
                            ImageUrl = "Files/bongobondhu1.jpg",
                            Name = "Vegetable",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9172),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0b42eb8c-a7fd-46aa-a88c-8d656b016115"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9174),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "This is category description",
                            ImageUrl = "Files/bongobondhu.jpg",
                            Name = "Seasonal Food",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9174),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("136e59e2-2046-460f-ad0e-60b75f3748c9"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9177),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "This is category description",
                            ImageUrl = "Files/bongobondhu1.jpg",
                            Name = "Phone",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9178),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7d0059e3-816c-44e1-8e36-adb7c74e1c7c"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9180),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "This is category description",
                            ImageUrl = "Files/bongobondhu.jpg",
                            Name = "Cloths",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9180),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7e2c655f-5e84-48c7-bda1-ad178a7be899"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9205),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "This is category description",
                            ImageUrl = "Files/pd-6.jpg",
                            Name = "Gadgets",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9206),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c405483e-b35c-4c4e-9e7e-387b5527f0b7"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9208),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "This is a default Category",
                            ImageUrl = "Files/pd-6.jpg",
                            Name = "default",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9208),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.ContactForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ContactForms");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.EmailMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmailStatus")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("EmailMessages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4050a16e-35f4-4696-b1a5-93c3fce68293"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9446),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailStatus = 1,
                            Message = "Please confirm your account by <a href='https://localhost:7191/Account/ConfirmEmail?userId=97087166-d73e-45d9-fcb5-08da187a20f1&amp;code=Q2ZESjhLVFh6U0g2bHMxQ21JRlBxQjhUY1NjOWF3eFJWVldTWHBtd3VhNmtTNG8xcmo0NGVYVWxHY2VUbEplK1pIclJVUnlWZVhlTVh3NlpicVN5N1B2UTNTOVp5NGhJdWd5bzhWc3FjYUFtMm1hNk9JbjdPRzEveXZSYkFOdkVDU2RrbnZDa0dicHM0NWdUVk5raXZDczI3aVlzQWJHTFcwY1B0MVh2R2ZUdUZ1bURNd0wvMzhrdFNUa0JQdDVPaXM5T1IyWVJrbU8rem4wZWIyU1Z2WlpseDFEZGJobmowZ20xUXNEbE10U3JHdHhOdy80bFJsdkxUbWpCWVNJazR3MlN6QT09&amp;returnUrl=%2F'>clicking here</a>.",
                            NotificationType = 2,
                            ReceiverEmail = "lamia@gmail.com",
                            ReceiverName = "Lamia",
                            SendTime = new DateTime(2022, 5, 20, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            StoreId = new Guid("691de45c-e852-4b05-ad05-2ef411d77be6"),
                            Subject = "Email Confirmation",
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9447),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4bd3bcfe-8084-49d6-8d04-50a4b59808f5"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailStatus = 1,
                            Message = "Please Check just Placed Order",
                            NotificationType = 5,
                            ReceiverEmail = "nabila@gmail.com",
                            ReceiverName = "Nabila",
                            SendTime = new DateTime(2022, 5, 20, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            StoreId = new Guid("2fb18a16-24cf-49a3-9d81-1a6fa5ab92f8"),
                            Subject = "New Order Notification",
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9450),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("093e78d3-df09-435a-834f-8b53a01b82ff"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9453),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailStatus = 1,
                            Message = "Dash Product is out of stock",
                            NotificationType = 4,
                            ReceiverEmail = "rifat@gmail.com",
                            ReceiverName = "Rifat",
                            SendTime = new DateTime(2022, 5, 20, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            StoreId = new Guid("644de43f-1762-466d-a251-ff3995fe43ca"),
                            Subject = "Product StockOut",
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9453),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ac9c4cd-003d-4bce-b5bc-732f025a57df"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9411),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("17a7dff9-34fd-44e6-98c2-aa9dd60392ef"),
                            Quantity = 23,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9411),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("97081fb9-f963-4125-aee3-ae7deaecb0ec"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9413),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0564dc12-ca23-4508-8f53-8a4c5aefe1a9"),
                            Quantity = 4,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9413),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e2390a67-27f8-439f-9c62-3ecb09dca511"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9415),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0c7dbebf-c240-405b-9883-1606ec29da00"),
                            Quantity = 6,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9415),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3ca1f739-7559-4a50-b4e3-8e8d8c86d482"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9416),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("7f6a2181-c381-4e6f-9c14-d9fc2c85b4f2"),
                            Quantity = 7,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9417),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("76e3dac5-facf-471d-af6c-ba5eb733f0d8"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9418),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c8fe1651-fd04-4c52-a3c1-634ad6d0e413"),
                            Quantity = 45,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9418),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b5ede1aa-d435-4817-b11d-55a518ad338f"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c272683a-c8d9-4e9d-b876-16f1e6f0d557"),
                            Quantity = 235,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9420),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1fa9d85a-1f28-4a16-a6ab-83cd29082a9d"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9421),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("3384cc0b-0030-4972-9454-159d47149677"),
                            Quantity = 68,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9422),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("beb721e0-0880-47b0-8a4e-298214b89134"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9423),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("9d9791cd-737c-4de8-bdfd-acf51a1dbb83"),
                            Quantity = 90,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9423),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9249ed3f-50d1-4f62-8d2f-9e047770ea6c"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9425),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("da35a95d-6862-45e1-8f10-6c0a5e1200d0"),
                            Quantity = 94,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9425),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.OrderNumbers");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.OrderedProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderedProducts");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DeleteQueue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Featured")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17a7dff9-34fd-44e6-98c2-aa9dd60392ef"),
                            ActiveStatus = true,
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9133),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteQueue = false,
                            Description = "Forget about description, firstly eat all of those.",
                            DiscountedPrice = 200m,
                            Featured = false,
                            Name = "Mango",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UnitPrice = 230m,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9133),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0564dc12-ca23-4508-8f53-8a4c5aefe1a9"),
                            ActiveStatus = true,
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9136),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteQueue = false,
                            Description = "Forget about description, firstly eat all of those.",
                            DiscountedPrice = 200m,
                            Featured = false,
                            Name = "JackFruit",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UnitPrice = 230m,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9136),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0c7dbebf-c240-405b-9883-1606ec29da00"),
                            ActiveStatus = true,
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9138),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteQueue = false,
                            Description = "Forget about description, firstly eat all of those.",
                            DiscountedPrice = 200m,
                            Featured = false,
                            Name = "APPLE",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UnitPrice = 230m,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9138),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7f6a2181-c381-4e6f-9c14-d9fc2c85b4f2"),
                            ActiveStatus = true,
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9140),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteQueue = false,
                            Description = "Forget about description, firstly eat all of those.",
                            DiscountedPrice = 200m,
                            Featured = false,
                            Name = "BANANA",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UnitPrice = 230m,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9140),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c8fe1651-fd04-4c52-a3c1-634ad6d0e413"),
                            ActiveStatus = true,
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9142),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteQueue = false,
                            Description = "Forget about description, firstly eat all of those.",
                            DiscountedPrice = 200m,
                            Featured = false,
                            Name = "BLACK BERRY",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UnitPrice = 230m,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9143),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c272683a-c8d9-4e9d-b876-16f1e6f0d557"),
                            ActiveStatus = true,
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9144),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteQueue = false,
                            Description = "Forget about description, firstly eat all of those.",
                            DiscountedPrice = 200m,
                            Featured = false,
                            Name = "BLACK BERRY",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UnitPrice = 230m,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9145),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3384cc0b-0030-4972-9454-159d47149677"),
                            ActiveStatus = true,
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9146),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteQueue = false,
                            Description = "Forget about description, firstly eat all of those.",
                            DiscountedPrice = 200m,
                            Featured = false,
                            Name = "BLACK BERRY",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UnitPrice = 230m,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9147),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9d9791cd-737c-4de8-bdfd-acf51a1dbb83"),
                            ActiveStatus = true,
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9148),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteQueue = false,
                            Description = "Forget about description, firstly eat all of those.",
                            DiscountedPrice = 200m,
                            Featured = false,
                            Name = "CUSTARD APPLE",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UnitPrice = 230m,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9149),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("da35a95d-6862-45e1-8f10-6c0a5e1200d0"),
                            ActiveStatus = true,
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9150),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteQueue = false,
                            Description = "Forget about description, firstly eat all of those.",
                            DiscountedPrice = 200m,
                            Featured = false,
                            Name = "DATE",
                            StoreId = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            UnitPrice = 230m,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9151),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("7f6a2181-c381-4e6f-9c14-d9fc2c85b4f2"),
                            CategoryId = new Guid("7a61cf49-d11a-494d-95ca-c649ed215773")
                        },
                        new
                        {
                            ProductId = new Guid("7f6a2181-c381-4e6f-9c14-d9fc2c85b4f2"),
                            CategoryId = new Guid("d6dcf59a-0cf7-4c22-aff5-38cd0223aca0")
                        },
                        new
                        {
                            ProductId = new Guid("7f6a2181-c381-4e6f-9c14-d9fc2c85b4f2"),
                            CategoryId = new Guid("0b42eb8c-a7fd-46aa-a88c-8d656b016115")
                        },
                        new
                        {
                            ProductId = new Guid("17a7dff9-34fd-44e6-98c2-aa9dd60392ef"),
                            CategoryId = new Guid("7a61cf49-d11a-494d-95ca-c649ed215773")
                        },
                        new
                        {
                            ProductId = new Guid("0564dc12-ca23-4508-8f53-8a4c5aefe1a9"),
                            CategoryId = new Guid("7a61cf49-d11a-494d-95ca-c649ed215773")
                        },
                        new
                        {
                            ProductId = new Guid("0c7dbebf-c240-405b-9883-1606ec29da00"),
                            CategoryId = new Guid("7a61cf49-d11a-494d-95ca-c649ed215773")
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.ProductDelete", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TriggeredOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductsDeleteQueue");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("168528cc-7ba4-452d-b4bf-d8032b3c2ef7"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9240),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("17a7dff9-34fd-44e6-98c2-aa9dd60392ef"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9240),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("9b545b2c-7e36-41ac-b39a-052cd61c8d4c"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9242),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("17a7dff9-34fd-44e6-98c2-aa9dd60392ef"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9242),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("35eb699e-2178-4aa9-aa35-9da2f042f5aa"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9244),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("17a7dff9-34fd-44e6-98c2-aa9dd60392ef"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9244),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("0221e486-e1fb-4f70-bb50-b527d1f28aa9"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9246),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0564dc12-ca23-4508-8f53-8a4c5aefe1a9"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9246),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("a0fc5bd0-c61b-4245-912c-592f364119ee"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9248),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0564dc12-ca23-4508-8f53-8a4c5aefe1a9"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9248),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("cd51ede2-86ed-4be8-90a7-a793533180a9"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9249),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0564dc12-ca23-4508-8f53-8a4c5aefe1a9"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9250),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("48ecb090-d6e6-456e-ae46-3bac53c6940d"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9251),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0c7dbebf-c240-405b-9883-1606ec29da00"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9252),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("39002937-6e1b-4aae-8c44-48f4f6110b4b"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9253),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0c7dbebf-c240-405b-9883-1606ec29da00"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9253),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("e8378dea-aa5f-4687-ad57-59c7beb7dd78"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9255),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0c7dbebf-c240-405b-9883-1606ec29da00"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9255),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("4ff8ed54-c165-40e9-ab72-41badce8bf96"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9257),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("7f6a2181-c381-4e6f-9c14-d9fc2c85b4f2"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9257),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("cf9c16f2-f231-4333-8f03-80eb2e0ad668"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9258),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("7f6a2181-c381-4e6f-9c14-d9fc2c85b4f2"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9259),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("4c78c682-3db8-475e-adbc-acf6ef43cef7"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9260),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("7f6a2181-c381-4e6f-9c14-d9fc2c85b4f2"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9260),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("cf96e6bd-ed46-440f-b7a6-74478e6c0f1c"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9262),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c8fe1651-fd04-4c52-a3c1-634ad6d0e413"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9263),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("b10e0200-8dd7-4363-a910-dd8951015917"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9264),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c8fe1651-fd04-4c52-a3c1-634ad6d0e413"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9264),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("8f6722d3-465d-4179-82df-45437c3616b6"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9266),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c8fe1651-fd04-4c52-a3c1-634ad6d0e413"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9266),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("c46e2768-2dee-456e-b4a9-395980d959b9"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9267),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c272683a-c8d9-4e9d-b876-16f1e6f0d557"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9268),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("85142851-d4db-4e6d-b79c-34f42a844c72"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9269),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c272683a-c8d9-4e9d-b876-16f1e6f0d557"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9269),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("f5e85072-f168-47c5-9c9c-f49980f0c88e"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9271),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c272683a-c8d9-4e9d-b876-16f1e6f0d557"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9271),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("3ea2bf49-689e-4835-afaf-0e6634bc116e"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9272),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("3384cc0b-0030-4972-9454-159d47149677"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9273),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("a4a74c94-afe8-4b2b-8b52-3de87ce926c3"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9274),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("3384cc0b-0030-4972-9454-159d47149677"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9274),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("6ba7ec7d-76ed-4e4b-a5bd-f720c829e524"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9277),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("3384cc0b-0030-4972-9454-159d47149677"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9277),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("ec75d4e0-6988-4e50-968b-a090b90dbaaf"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9279),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("9d9791cd-737c-4de8-bdfd-acf51a1dbb83"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9279),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("30b27db0-5cfb-4191-87f2-31055a93bcf9"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9281),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("9d9791cd-737c-4de8-bdfd-acf51a1dbb83"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9281),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("e055e80e-6894-43e9-bce3-3ee45c044b3e"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9282),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("9d9791cd-737c-4de8-bdfd-acf51a1dbb83"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9283),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("bb16a155-3b52-4068-a639-ead927c7eb18"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9284),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("da35a95d-6862-45e1-8f10-6c0a5e1200d0"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9285),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("39343150-0ebd-4034-b593-2260a85959bb"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9286),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("da35a95d-6862-45e1-8f10-6c0a5e1200d0"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9286),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        },
                        new
                        {
                            Id = new Guid("23fcef43-c376-42bf-aeb9-a7814bd389b1"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9287),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("da35a95d-6862-45e1-8f10-6c0a5e1200d0"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9288),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Url = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg"
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.ProductSubscriptionNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductSubscriptionNotifications");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReviewMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64d4449e-7736-4a1b-af87-19faf732d498"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9305),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("17a7dff9-34fd-44e6-98c2-aa9dd60392ef"),
                            ReviewMessage = "This product is awesome...",
                            Stars = 51,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9306),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("539ebcc8-48d0-4ae2-bce3-8a805cde9d7e")
                        },
                        new
                        {
                            Id = new Guid("69003aac-dbd8-4cf7-a3fc-468e873b501f"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9308),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0564dc12-ca23-4508-8f53-8a4c5aefe1a9"),
                            ReviewMessage = "This product is awesome...",
                            Stars = 45,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9308),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("539ebcc8-48d0-4ae2-bce3-8a805cde9d7e")
                        },
                        new
                        {
                            Id = new Guid("58eb49f6-2650-4932-85b2-5cf2ab709d0a"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9310),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("0c7dbebf-c240-405b-9883-1606ec29da00"),
                            ReviewMessage = "This product is awesome...",
                            Stars = 95,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9310),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("539ebcc8-48d0-4ae2-bce3-8a805cde9d7e")
                        },
                        new
                        {
                            Id = new Guid("20a6a53c-6d75-4203-bd58-5d1f333630e4"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9312),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("7f6a2181-c381-4e6f-9c14-d9fc2c85b4f2"),
                            ReviewMessage = "This product is awesome...",
                            Stars = 75,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9313),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("539ebcc8-48d0-4ae2-bce3-8a805cde9d7e")
                        },
                        new
                        {
                            Id = new Guid("090734b5-5dcf-4b90-bf7a-14e0293ebc3c"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9314),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c8fe1651-fd04-4c52-a3c1-634ad6d0e413"),
                            ReviewMessage = "This product is awesome...",
                            Stars = 6,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9315),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("539ebcc8-48d0-4ae2-bce3-8a805cde9d7e")
                        },
                        new
                        {
                            Id = new Guid("3b7f4f89-4fd9-4a0e-a44e-5a978b984f9e"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9317),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("c272683a-c8d9-4e9d-b876-16f1e6f0d557"),
                            ReviewMessage = "This product is awesome...",
                            Stars = 48,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9317),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("539ebcc8-48d0-4ae2-bce3-8a805cde9d7e")
                        },
                        new
                        {
                            Id = new Guid("32eb7b51-cbab-4037-a1c0-7751e59af006"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9319),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("3384cc0b-0030-4972-9454-159d47149677"),
                            ReviewMessage = "This product is awesome...",
                            Stars = 74,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9319),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("539ebcc8-48d0-4ae2-bce3-8a805cde9d7e")
                        },
                        new
                        {
                            Id = new Guid("6da2e12e-ed26-4710-b09b-5a467f00b370"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9321),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("9d9791cd-737c-4de8-bdfd-acf51a1dbb83"),
                            ReviewMessage = "This product is awesome...",
                            Stars = 95,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9321),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("539ebcc8-48d0-4ae2-bce3-8a805cde9d7e")
                        },
                        new
                        {
                            Id = new Guid("eb38af2c-ed79-4dd2-a954-da8c0714b411"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9323),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductId = new Guid("da35a95d-6862-45e1-8f10-6c0a5e1200d0"),
                            ReviewMessage = "This product is awesome...",
                            Stars = 6,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9323),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("539ebcc8-48d0-4ae2-bce3-8a805cde9d7e")
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.ReviewImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.ToTable("ReviewImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71567962-5dd2-4b5b-a847-db236ec93c5e"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9339),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("64d4449e-7736-4a1b-af87-19faf732d498"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9340),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0238037a-2cd5-4ea9-b757-837c94abdc6d"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9341),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("64d4449e-7736-4a1b-af87-19faf732d498"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9342),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f02c65f1-e7bd-4188-916f-6318f0793d09"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9343),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("69003aac-dbd8-4cf7-a3fc-468e873b501f"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9344),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("deebb58a-9ca3-42dc-bf2e-c802e34ee6c9"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9345),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("69003aac-dbd8-4cf7-a3fc-468e873b501f"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9346),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4ada5267-eda9-444e-a5de-e1777af82f93"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9347),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("58eb49f6-2650-4932-85b2-5cf2ab709d0a"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9347),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9f672271-69a9-4e14-ba9e-ce19d14fbae0"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9370),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("58eb49f6-2650-4932-85b2-5cf2ab709d0a"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9370),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("75f84234-474b-4194-beec-976df6849477"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9373),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("20a6a53c-6d75-4203-bd58-5d1f333630e4"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9373),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ccff21d2-f3dc-4708-b9f5-dbb431330df8"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9375),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("20a6a53c-6d75-4203-bd58-5d1f333630e4"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9375),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2f006d01-c324-47ae-bbbb-ea2ea344f5ae"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9376),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("090734b5-5dcf-4b90-bf7a-14e0293ebc3c"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9377),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b5f9ff0c-5f2b-4688-a017-b1efea777bfd"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9379),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("090734b5-5dcf-4b90-bf7a-14e0293ebc3c"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9379),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("30f3e4f8-40d4-41fc-9b93-8c4c2975a2e9"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9380),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("3b7f4f89-4fd9-4a0e-a44e-5a978b984f9e"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9381),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3dc3e3e3-30ab-4046-bed6-faeacf2dfefb"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9382),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("3b7f4f89-4fd9-4a0e-a44e-5a978b984f9e"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9383),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ce002d91-8887-4119-8139-cf16594ca59d"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9384),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("32eb7b51-cbab-4037-a1c0-7751e59af006"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9384),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("371094d8-040a-43b1-9607-dee0dfbe9d35"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9386),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("32eb7b51-cbab-4037-a1c0-7751e59af006"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9386),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("92007882-8650-47e6-84c0-1044ca243dd5"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9387),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("6da2e12e-ed26-4710-b09b-5a467f00b370"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9388),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("dfd8ec9f-6728-42f5-9ca1-827a5a363a47"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9389),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("6da2e12e-ed26-4710-b09b-5a467f00b370"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9389),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7b483263-77dd-427b-b8e6-50fe415054b8"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9391),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("eb38af2c-ed79-4dd2-a954-da8c0714b411"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9391),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("57e4fca9-5b0f-413f-bee4-55867f974086"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9393),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ImageUrl = "Files/andrew-seaman-14HyRO75p24-unsplash.jpg",
                            ReviewId = new Guid("eb38af2c-ed79-4dd2-a954-da8c0714b411"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9393),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApartmentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DetailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookPageHandle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Handle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HostTrigger")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("InstagramAccountHandle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingIndustry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionalPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreBannerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubscriptionPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1457e73-abc4-42a4-af2f-ce7ca1c65ff1"),
                            ApartmentAddress = "107, Prem Goli, Jatrabari.",
                            City = "Dhaka",
                            Country = "Bangladesh",
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9101),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DetailAddress = "Nil akhash",
                            FacebookPageHandle = "www.facebook.com/PeraNaiChill",
                            Handle = "amarShop",
                            HostTrigger = 0,
                            InstagramAccountHandle = "www.instagram.com/PeraNaiChill",
                            OperatingIndustry = "Food",
                            OptionalPhoneNumber = "+880123456789",
                            PostalCode = "1236",
                            PrimaryPhoneNumber = "+880123456789",
                            StoreBannerUrl = "Files/Screenshot_28.png",
                            StoreDescription = "Ai khany valo valo khabar pawa jay",
                            StoreEmailAddress = "chill@gmail.com",
                            StoreLogoUrl = "Files/online-shopLogojpg.jpg",
                            StoreName = "Pera Nai Chill",
                            StoreTitle = "Ekdin to morei jabo",
                            StoreUrl = "www.PeraNaiChill.com",
                            SubscriptionPlanId = new Guid("3882468c-202f-492f-a2e2-8d27c8f47add"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9101),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2936df93-54c3-4ff7-b2e1-00cc32b86c49"),
                            ApartmentAddress = "107, Prem Goli, Jatrabari.",
                            City = "Dhaka",
                            Country = "Bangladesh",
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9106),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DetailAddress = "Nil akhash",
                            FacebookPageHandle = "www.facebook.com/vai123",
                            Handle = "shopAmar",
                            HostTrigger = 0,
                            InstagramAccountHandle = "www.instagram.com/vai123",
                            OperatingIndustry = "Electronics",
                            OptionalPhoneNumber = "+880123456789",
                            PostalCode = "1236",
                            PrimaryPhoneNumber = "+880123456789",
                            StoreBannerUrl = "Files/Screenshot_28.png",
                            StoreDescription = "Fresh food",
                            StoreEmailAddress = "vai_vai@gmail.com",
                            StoreLogoUrl = "Files/online-shopLogojpg.jpg",
                            StoreName = "Vai Vai Mudir dokan",
                            StoreTitle = "Baki cheye lojja diben na",
                            StoreUrl = "www.vai-vai.com",
                            SubscriptionPlanId = new Guid("0720c8e2-f298-40de-840f-ac63556f45ee"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9106),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a36b6614-5254-4fb9-9253-f2cca4b4739e"),
                            ApartmentAddress = "107, Prem Goli, Jatrabari.",
                            City = "Dhaka",
                            Country = "Bangladesh",
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9110),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DetailAddress = "Nil akhash",
                            FacebookPageHandle = "www.facebook.com/PeraNaiChill",
                            Handle = "store",
                            HostTrigger = 0,
                            InstagramAccountHandle = "www.instagram.com/PeraNaiChill",
                            OperatingIndustry = "Food",
                            OptionalPhoneNumber = "+880123456789",
                            PostalCode = "1236",
                            PrimaryPhoneNumber = "+880123456789",
                            StoreBannerUrl = "Files/Screenshot_28.png",
                            StoreDescription = "Ai khany valo valo khabar pawa jay",
                            StoreEmailAddress = "chill@gmail.com",
                            StoreLogoUrl = "Files/online-shopLogojpg.jpg",
                            StoreName = "Pera Nai Chill 2",
                            StoreTitle = "Ekdin to morei jabo",
                            StoreUrl = "www.PeraOnk.com",
                            SubscriptionPlanId = new Guid("9cd3bd23-76dd-435f-b9ee-533f403ab0c9"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9110),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e8173b5c-ec25-4f48-a008-0597c99aed32"),
                            ApartmentAddress = "107, Prem Goli, Jatrabari.",
                            City = "Dhaka",
                            Country = "Bangladesh",
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9113),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DetailAddress = "Nil akhash",
                            FacebookPageHandle = "www.facebook.com/vai123",
                            Handle = "HlwWorld",
                            HostTrigger = 0,
                            InstagramAccountHandle = "www.instagram.com/vai123",
                            OperatingIndustry = "Electronics",
                            OptionalPhoneNumber = "+880123456789",
                            PostalCode = "1236",
                            PrimaryPhoneNumber = "+880123456789",
                            StoreBannerUrl = "Files/Screenshot_28.png",
                            StoreDescription = "Fresh food",
                            StoreEmailAddress = "vai_vai@gmail.com",
                            StoreLogoUrl = "Files/online-shopLogojpg.jpg",
                            StoreName = "Vai Vai Mudir dokan 2",
                            StoreTitle = "Baki cheye lojja diben na",
                            StoreUrl = "www.earth.com",
                            SubscriptionPlanId = new Guid("3882468c-202f-492f-a2e2-8d27c8f47add"),
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9113),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.SubscriptionPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlanColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PlanPrice")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductUploadLimit")
                        .HasColumnType("int");

                    b.Property<bool>("PublicPlan")
                        .HasColumnType("bit");

                    b.Property<double>("StorageLimit")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3882468c-202f-492f-a2e2-8d27c8f47add"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(8992),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            PlanColor = "#32a852",
                            PlanName = "Free",
                            PlanPrice = 0L,
                            ProductUploadLimit = 30,
                            PublicPlan = true,
                            StorageLimit = 64.0,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9003),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9cd3bd23-76dd-435f-b9ee-533f403ab0c9"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9006),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            PlanColor = "#1a93b8",
                            PlanName = "Starter",
                            PlanPrice = 1000L,
                            ProductUploadLimit = 100,
                            PublicPlan = true,
                            StorageLimit = 128.0,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9006),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f926ccba-0124-4219-845f-085d49240523"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9008),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            PlanColor = "#1a2cb8",
                            PlanName = "Bronze",
                            PlanPrice = 3000L,
                            ProductUploadLimit = 500,
                            PublicPlan = true,
                            StorageLimit = 512.0,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9008),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f7e16f23-215f-4e2c-bd43-ef3811c94b25"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9009),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            PlanColor = "#981ab8",
                            PlanName = "Silver",
                            PlanPrice = 10000L,
                            ProductUploadLimit = 1000,
                            PublicPlan = true,
                            StorageLimit = 1024.0,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9010),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0720c8e2-f298-40de-840f-ac63556f45ee"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9011),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            PlanColor = "#b81a34",
                            PlanName = "Gold",
                            PlanPrice = 30000L,
                            ProductUploadLimit = 5000,
                            PublicPlan = true,
                            StorageLimit = 5120.0,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9011),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5988b4b6-ea74-40b8-a4e6-692dcadc1d6c"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9013),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            PlanColor = "#8de010",
                            PlanName = "Diamond",
                            PlanPrice = 50000L,
                            ProductUploadLimit = 10000,
                            PublicPlan = true,
                            StorageLimit = 10240.0,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9013),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6e27c9b0-dcf7-48d8-a3fc-53b001614d94"),
                            CreatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9014),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            PlanColor = "#e01010",
                            PlanName = "Platinum",
                            PlanPrice = 1000000L,
                            ProductUploadLimit = 100000,
                            PublicPlan = true,
                            StorageLimit = 102400.0,
                            UpdatedAt = new DateTime(2022, 6, 2, 3, 49, 50, 4, DateTimeKind.Local).AddTicks(9015),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Wishlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Category", b =>
                {
                    b.HasOne("Ecommerce.Store.Entities.Store", "Store")
                        .WithMany("Categories")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Inventory", b =>
                {
                    b.HasOne("Ecommerce.Store.Entities.Product", "Product")
                        .WithOne("ProductInventory")
                        .HasForeignKey("Ecommerce.Store.Entities.Inventory", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.OrderedProduct", b =>
                {
                    b.HasOne("Ecommerce.Store.Entities.Order", "Order")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.ProductCategory", b =>
                {
                    b.HasOne("Ecommerce.Store.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Store.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.ProductImage", b =>
                {
                    b.HasOne("Ecommerce.Store.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Review", b =>
                {
                    b.HasOne("Ecommerce.Store.Entities.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.ReviewImage", b =>
                {
                    b.HasOne("Ecommerce.Store.Entities.Review", "Review")
                        .WithMany("ReviewImages")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Review");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Order", b =>
                {
                    b.Navigation("OrderedProducts");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductInventory");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Review", b =>
                {
                    b.Navigation("ReviewImages");
                });

            modelBuilder.Entity("Ecommerce.Store.Entities.Store", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
